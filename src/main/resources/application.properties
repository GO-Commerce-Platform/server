# Database Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USERNAME:gocommerceuser}
quarkus.datasource.password=${DB_PASSWORD:gocommercepass}
quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:gocommerce}
quarkus.datasource.jdbc.max-size=16
# Hibernate ORM - For default profile, Flyway manages the schema.
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.sql-load-script=no-file
quarkus.hibernate-orm.implicit-naming-strategy=component-path
quarkus.hibernate-orm.physical-naming-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
quarkus.hibernate-orm.jdbc.timezone=UTC
# Multi-store specific configuration - ENABLED FOR SCHEMA-BASED TENANCY
quarkus.hibernate-orm.multitenant=SCHEMA
# CRITICAL: Do NOT set default-schema property for SCHEMA multi-tenancy
# This would override tenant resolution and break schema switching
# quarkus.hibernate-orm.database.default-schema=${DB_NAME:gocommerce}
# Enable tenant-specific schema qualification - CDI handles bean selection
# Flyway Migration Configuration - Master Schema Only
# Store schemas are managed programmatically by SchemaManager
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=0.0.0
quarkus.flyway.schemas=${DB_NAME:gocommerce}
quarkus.flyway.table=flyway_schema_history
quarkus.flyway.locations=db/migration/master
quarkus.flyway.validate-on-migrate=false
quarkus.flyway.repair-at-start=true
# Multi-Schema Migration Configuration
# These properties are used by SchemaManager for store-specific migrations
gocommerce.flyway.store-migrations.locations=db/migration/stores
gocommerce.flyway.store-migrations.table=flyway_schema_history
gocommerce.flyway.store-migrations.baseline-version=1.0.0
gocommerce.flyway.store-migrations.validate-on-migrate=true
# OpenAPI Configuration
quarkus.smallrye-openapi.path=/openapi
quarkus.swagger-ui.path=/swagger-ui
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.title=GO Commerce API
quarkus.swagger-ui.theme=original
# OIDC with KeyCloak (placeholder config - to be updated with actual values)
quarkus.oidc.auth-server-url=http://localhost:${KEYCLOAK_PORT:9000}/realms/${KEYCLOAK_REALM:gocommerce}
quarkus.oidc.client-id=${KEYCLOAK_CLIENT_ID:gocommerce-client}
quarkus.oidc.credentials.secret=${KEYCLOAK_CLIENT_SECRET:NwASnqRj8AnokmBaDIVy9WTijHYrWHAe}
quarkus.oidc.application-type=service
gocommerce.auth.store-roles-claim=store_roles # Added for explicit configuration
# REST Client Configuration for Keycloak Auth Services
quarkus.rest-client.keycloak-token-client.url=http://localhost:${KEYCLOAK_PORT:9000}/realms/${KEYCLOAK_REALM:gocommerce}
quarkus.rest-client.keycloak-token-client.connect-timeout=5000
quarkus.rest-client.keycloak-token-client.read-timeout=10000
quarkus.rest-client.keycloak-logout-client.url=http://localhost:${KEYCLOAK_PORT:9000}/realms/${KEYCLOAK_REALM:gocommerce}
quarkus.rest-client.keycloak-logout-client.connect-timeout=5000
quarkus.rest-client.keycloak-logout-client.read-timeout=10000
# Internationalization Configuration
quarkus.default-locale=en
quarkus.locales=en,pt_BR,pt,es
quarkus.http.same-site-cookie.locale-cookie.value=strict
# Setting for request path store resolver
# Comment this out if using the subdomain resolver only
# quarkus.http.root-path=/{storeId}
# Banner Configuration
quarkus.banner.path=banner.txt
quarkus.banner.enabled=true
# Default domain suffix for stores
gocommerce.store.default-domain-suffix=gocommerce.com
# Target realm for GO-Commerce operations (can be the same as oidc.auth-server-url's realm or different)
gocommerce.keycloak.target-realm=${KEYCLOAK_REALM:gocommerce}
# Keycloak Admin Client Configuration - Modern Quarkus Extension
# Uses CLIENT_CREDENTIALS grant type for service-to-service communication
# This configuration enables the StoreCreationService to manage Keycloak realms, users, and roles
# Required for multi-tenant store creation workflow
quarkus.keycloak.admin-client.server-url=http://localhost:${KEYCLOAK_PORT:9000}
quarkus.keycloak.admin-client.realm=${KEYCLOAK_REALM:gocommerce}
quarkus.keycloak.admin-client.client-id=${KEYCLOAK_CLIENT_ID:gocommerce-client}
quarkus.keycloak.admin-client.client-secret=${KEYCLOAK_CLIENT_SECRET:NwASnqRj8AnokmBaDIVy9WTijHYrWHAe}
quarkus.keycloak.admin-client.grant-type=CLIENT_CREDENTIALS
# Database Configuration for Store Creation (Schema Management)
# Enhanced database user with schema creation privileges for multi-tenant setup
# These credentials are used by SchemaManager to create and manage store-specific schemas
# The admin user must have CREATE, DROP, and ALTER privileges on the database
gocommerce.database.schema-admin.username=${DB_SCHEMA_ADMIN_USERNAME:gocommerceadmin}
gocommerce.database.schema-admin.password=${DB_SCHEMA_ADMIN_PASSWORD:gocommerceadminpass}
