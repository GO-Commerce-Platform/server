quarkus.oidc.auth-server-url=https://localhost:9000/realms/gocommerce
quarkus.tls.trust-all=true

# Database Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USERNAME:gocommerceuser}
quarkus.datasource.password=${DB_PASSWORD:gocommercepass}
quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:gocommerce}
quarkus.datasource.jdbc.max-size=16
# Hibernate ORM - For default profile, Flyway manages the schema.
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.sql-load-script=no-file
quarkus.hibernate-orm.implicit-naming-strategy=component-path
quarkus.hibernate-orm.physical-naming-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
quarkus.hibernate-orm.jdbc.timezone=UTC
# Multi-store specific configuration
quarkus.hibernate-orm.multitenant=SCHEMA
quarkus.hibernate-orm.database.default-schema=${DB_NAME:gocommerce}
# Enable tenant-specific schema qualification - CDI alternatives handle selection
# PostgreSQL-specific configuration for schema-based multi-tenancy
%test.quarkus.hibernate-orm.jdbc.statement-batch-size=1
%test.quarkus.hibernate-orm.log.sql=true
# Enable multi-tenancy debug logging
%test.quarkus.log.category."org.hibernate.engine.jdbc.connections.spi".level=DEBUG
%test.quarkus.log.category."org.hibernate.context".level=DEBUG
%test.quarkus.log.category."org.hibernate.tenant".level=DEBUG
# Flyway Migration Configuration - Master Schema Only
# Store schemas are managed programmatically by SchemaManager
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=0.0.0
quarkus.flyway.schemas=${DB_NAME:gocommerce}
quarkus.flyway.table=flyway_schema_history
quarkus.flyway.locations=db/migration/master
quarkus.flyway.validate-on-migrate=false
quarkus.flyway.repair-at-start=true
# Multi-Schema Migration Configuration
# These properties are used by SchemaManager for store-specific migrations
gocommerce.flyway.store-migrations.locations=db/migration/stores
gocommerce.flyway.store-migrations.table=flyway_schema_history
gocommerce.flyway.store-migrations.baseline-version=1.0.0
gocommerce.flyway.store-migrations.validate-on-migrate=true
# OpenAPI Configuration
quarkus.smallrye-openapi.path=/openapi
quarkus.swagger-ui.path=/swagger-ui
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.title=GO Commerce API
quarkus.swagger-ui.theme=original
# Test Configuration - Enable OIDC for authentication tests
%test.quarkus.oidc.enabled=true
%test.quarkus.oidc.auth-server-url=http://localhost:9000/realms/gocommerce
%test.quarkus.oidc.client-id=gocommerce-client
%test.quarkus.oidc.credentials.secret=NwASnqRj8AnokmBaDIVy9WTijHYrWHAe
%test.quarkus.oidc.application-type=service
# Disable store security for tests - platform admin should bypass all checks


# Test Store Schema Configuration
%test.gocommerce.test.default-store-schema=test_store_default
%test.gocommerce.test.create-default-store-schema=true
%test.gocommerce.test.cleanup-schemas-on-exit=true

# Multi-tenant configuration enabled for tests
# Internationalization Configuration
quarkus.default-locale=en
quarkus.locales=en,pt_BR,pt,es
quarkus.http.same-site-cookie.locale-cookie.value=strict
# Setting for request path store resolver
# Comment this out if using the subdomain resolver only
# quarkus.http.root-path=/{storeId}
# Banner Configuration
quarkus.banner.path=banner.txt
quarkus.banner.enabled=true
# Default domain suffix for stores
gocommerce.store.default-domain-suffix=gocommerce.com
# Target realm for GO-Commerce operations (can be the same as oidc.auth-server-url's realm or different)
gocommerce.keycloak.target-realm=${KEYCLOAK_REALM:gocommerce}
# Keycloak Admin Client Configuration
quarkus.keycloak.admin-client.server-url=http://localhost:9000
quarkus.keycloak.admin-client.realm=gocommerce
quarkus.keycloak.admin-client.client-id=gocommerce-client
quarkus.keycloak.admin-client.client-secret=NwASnqRj8AnokmBaDIVy9WTijHYrWHAe
quarkus.keycloak.admin-client.grant-type=CLIENT_CREDENTIALS
# REST Client Configuration for Keycloak Auth Services (Test Environment)
quarkus.rest-client.keycloak-token-client.url=http://localhost:9000/realms/gocommerce
quarkus.rest-client.keycloak-token-client.connect-timeout=5000
quarkus.rest-client.keycloak-token-client.read-timeout=10000
quarkus.rest-client.keycloak-logout-client.url=http://localhost:9000/realms/gocommerce
quarkus.rest-client.keycloak-logout-client.connect-timeout=5000
quarkus.rest-client.keycloak-logout-client.read-timeout=10000
