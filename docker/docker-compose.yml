services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-gocommerce}
      POSTGRES_USER: ${DB_USERNAME:-gocommerceuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-gocommercepass}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - ./storage/postgres_data:/var/lib/postgresql/data
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-gocommerceuser} -d ${DB_NAME:-gocommerce}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gocommerce-network

  # Keycloak for Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    volumes:
      - ./storage/keycloak/providers:/opt/keycloak/providers
      - ./docker/keycloak-config:/opt/keycloak/data/import
    command:
      [
        "start-dev",
        "--http-port=9000",
        "--hostname-strict=false",
        "--http-enabled=true",
        "--http-relative-path=/",
        "--import-realm",
      ]
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/${KEYCLOAK_DB_SCHEMA:-keycloak}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USERNAME:-keycloak}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak}
      # Admin user for initial setup (using recommended environment variables)
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN:-admin}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      # Runtime configuration
      KC_HOSTNAME: localhost # Adjust if needed for external access simulation
      KC_HTTP_PORT: ${KEYCLOAK_PORT:-9000} # Ensure internal port matches command
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_TRANSACTION_XA_ENABLED: false
      KC_LOGLEVEL: INFO
    ports:
      - "${KEYCLOAK_PORT:-9000}:${KEYCLOAK_PORT:-9000}" # Expose the correct port
    depends_on:
      keycloak-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - gocommerce-network

  keycloak-db:
    image: postgres:latest
    volumes:
      - ./storage/keycloak-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_SCHEMA:-keycloak}
      POSTGRES_USER: ${KEYCLOAK_DB_USERNAME:-keycloak}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USERNAME:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gocommerce-network

  # GO-Commerce Application
  gocommerce:
    build:
      context: ..
      dockerfile: ./docker/app/Dockerfile.jvm
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/${DB_NAME:-gocommerce}
      - QUARKUS_DATASOURCE_USERNAME=${DB_USERNAME:-gocommerceuser}
      - QUARKUS_DATASOURCE_PASSWORD=${DB_PASSWORD:-gocommercepass}
      - QUARKUS_OIDC_AUTH_SERVER_URL=http://keycloak:${KEYCLOAK_PORT:-9000}/realms/gocommerce
      - QUARKUS_OIDC_CLIENT_ID=${OIDC_CLIENT_ID:-gocommerce-client}
      - QUARKUS_OIDC_CREDENTIALS_SECRET=${OIDC_CLIENT_SECRET:-NwASnqRj8AnokmBaDIVy9WTijHYrWHAe}
      # Database configuration for multi-schema operations (single user approach)
      - DB_SCHEMA_ADMIN_USERNAME=${DB_USERNAME:-gocommerceuser}
      - DB_SCHEMA_ADMIN_PASSWORD=${DB_PASSWORD:-gocommercepass}
      # Keycloak Admin Client configuration for store management
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-gocommerce}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID:-gocommerce-client}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET:-NwASnqRj8AnokmBaDIVy9WTijHYrWHAe}
      - KEYCLOAK_PORT=${KEYCLOAK_PORT:-9000}
    restart: unless-stopped
    networks:
      - gocommerce-network

networks:
  gocommerce-network:
    driver: bridge
